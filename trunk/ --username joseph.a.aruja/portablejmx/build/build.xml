<?xml version="1.0"?>

<project name="jmxresearch" basedir="." default="usage">

	<property name="name" value="jmxportability"/>

	<property name="war.dir" value="war"/>
	<property name="ear.dir" value="ear"/>
	<property name="src.dir" value="../src"/>
	<property name="build.dir" value=".classes"/>
	
	
	<property name="docs.dir" value="${war.dir}/docs"/>
	<property name="webclasses.dir" value="${war.dir}/WEB-INF/classes"/>
	<property name="weblib.dir" value="${war.dir}/WEB-INF/lib"/>
	<property name="dist.dir" value="dist"/>
	
	<property name="db.dir" value="db"/>
	<property name="testsrc.dir" value="test"/>
	<property name="testbuild.dir" value=".testclasses"/>
	<property name="testreports.dir" value="junit-reports"/>
	<property name="testhtml.dir" value="${testreports.dir}/html"/>

	<property name="jmxreserach.root" value="../"/>
	<property name="jboss.home" value="E:/softwares/jboss-4.0.5.GA/"/>	
	<property file="build.properties"/>


	<path id="master-classpath">
		<fileset dir="${jmxreserach.root}/lib">
			<include name="servlet-api.jar"/>
		</fileset>	
	</path>


	<path id="build-classpath">
		<fileset dir="${jmxreserach.root}/lib/">
			<include name="commons-logging.jar"/>
			<include name="servlet-api.jar"/>
			<include name="jamon-2.7.jar"/>
			<include name="fdsapi-1.1.jar"/>
			<include name="hsqldb.jar"/>
			<include name="jakarta-oro-2.0.8.jar"/>			
		</fileset>
	</path>


	<path id="test-classpath">		
	</path>


	<target name="usage">

		<echo message="${jmxreserach.root}"/>
		<echo message="jmxportability build file"/>
		<echo message="------------------------------------------------------"/>
		<echo message=""/>
		<echo message="Available targets are:"/>
		<echo message=""/>
		<echo message="clean    --> Clean output dirs"/>
		<echo message="build    --> Compile main Java sources and copy libraries"/>
		<!--<echo message="docs     Create complete Javadoc documentation"/>-->
		<echo message="warfile  --> Build the web application archive"/>
	
		<!--
		<echo message="setupDB   Initialize the database"/>
		<echo message="tests     Run tests using initialized database"/> 
		-->
	
		
		<echo message="all      --> Clean, build, docs, warfile, tests"/>
		<echo message=""/>

	</target>


	<target name="clean" description="Clean output dirs (build, weblib, dist)">
		<!--docs, testbuild, testreports,-->

		<delete dir="${build.dir}"/>
		<delete dir="${docs.dir}"/>
		<delete>
			<fileset dir="${webclasses.dir}">
				<!--
				<include name="*.hbm.xml"/>
				<include name="OJB*.*"/>
				<include name="toplink*.*"/>-->
				
				<!-- JPA meta-inf -->
				<!--
				<include name="META-INF/*"/>
				-->
			</fileset>
		</delete>
		<delete dir="${weblib.dir}"/>
		<!--
		<delete dir="${testbuild.dir}"/>
		<delete dir="${testreports.dir}"/>
		-->
		<delete dir="${dist.dir}"/>
		<delete dir="${ear.dir}/package"/>

	</target>


	<target name="build" description="Compile main source tree java files into class files, generate jar files">
		<echo></echo>
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${weblib.dir}"/>

		<javac destdir="${build.dir}" source="1.5" target="1.5" debug="true"
				deprecation="false" optimize="false" failonerror="true">
			<src path="${src.dir}"/>
			<classpath refid="master-classpath"/>
			<classpath refid="build-classpath"/>
		</javac>

		<copy todir="${webclasses.dir}" preservelastmodified="true">
			<fileset dir="${src.dir}">
				<include name="*.hbm.xml"/>
				<include name="OJB*.*"/>
				<include name="toplink*.*"/>
				<!-- JPA meta-inf -->
				<include name="META-INF/*"/>
			</fileset>
		</copy>

		<!-- jmxportability-domain.jar -->
		<!--
		<jar jarfile="${weblib.dir}/${name}-domain.jar" compress="true">
			<fileset dir="${build.dir}">
				<include name="${domain.classes}"/>
			</fileset>
		</jar>
		-->

		<!-- rest of jmxportability classes -->
		<jar jarfile="${weblib.dir}/${name}.jar" compress="true">
			<fileset dir="${build.dir}">
				<include name="**/*"/>
				<exclude name="${domain.classes}"/>
			</fileset>
		</jar>

		<!-- copy Tomcat META-INF -->
		<copy todir="${weblib.dir}" preservelastmodified="true">
			
			<fileset dir="${jmxreserach.root}/lib/">
				<include name="commons-logging.jar"/>
				<include name="jamon-2.7.jar"/>
			</fileset>

		</copy>

	</target>


	<target name="docs" description="Create complete Javadoc documentation">

		<delete dir="${docs.dir}"/>

		<mkdir dir="${docs.dir}"/>

		<javadoc sourcepath="${src.dir}" destdir="${docs.dir}" windowtitle="jmxportability"
				source="1.5" author="true" version="true" use="true" packagenames="*">
			<doctitle><![CDATA[<h1>jmxportability</h1>]]></doctitle>
			<bottom><![CDATA[<i>Joseph Aruja, 2007-2010.</i>]]></bottom>
			<classpath refid="master-classpath"/>
			<classpath refid="build-classpath"/>
		</javadoc>

	</target>


	<target name="dist" depends="warfile">
		<!--
			Delegate to warfile target by depending on it. dist is just to offer
			a generic target name across all Spring sample apps that may be used
			for autobuilds testing.
		-->
	</target>

	<target name="earfile" depends="build, warfile" description="Build the enterprise application archive" >

		<mkdir dir="${ear.dir}/package"/>
		
		<copy file="${war.dir}/WEB-INF/lib/${name}-domain.jar" todir="${ear.dir}/package"/>
			
		<war warfile="${ear.dir}/package/${name}.war" basedir="${war.dir}" webxml="${war.dir}/WEB-INF/web.xml">
			<include name="*"/>
			<include name="docs/**"/>
			<include name="html/**"/>
			<include name="WEB-INF/*.*"/>
			<exclude name="WEB-INF/web.xml"/>
			<include name="WEB-INF/classes/*.*"/>
			<include name="WEB-INF/classes/META-INF/**"/>
			<include name="WEB-INF/lib/**"/>
			<include name="WEB-INF/jsp/**"/>
			<include name="META-INF/*"/>
			<exclude name="**/jmxportability-domain.jar"/>
			<exclude name="**/.*"/>
			<exclude name="WEB-INF/geronimo-web.xml"/>
		</war>
		
		<ear earfile="${dist.dir}/${name}.ear" basedir="${ear.dir}/package" appxml="${ear.dir}/META-INF/application.xml" manifest="${ear.dir}/META-INF/MANIFEST.MF">
			<include name="${name}.war" />

			<include name="${name}-domain.jar"/>
		</ear>

	</target>

	<target name="warfile" depends="build" description="Build the web application archive">
	<!--, docs-->
		<mkdir dir="${dist.dir}"/>

		<war warfile="${dist.dir}/${name}.war" basedir="${war.dir}" webxml="${war.dir}/WEB-INF/web.xml">
			<include name ="${webapp.dir}/*"/>
			<include name="*"/>
			<include name="docs/**"/>
			<include name="html/**"/>
			<include name="WEB-INF/*.*"/>
			<exclude name="WEB-INF/web.xml"/>
			<include name="WEB-INF/classes/*.*"/>
			<include name="WEB-INF/classes/META-INF/**"/>
			<include name="WEB-INF/lib/**"/>
			<include name="WEB-INF/jsp/**"/>
			<include name="META-INF/*"/>
			<include name="images/*"/>
			<include name="css/*"/>
			<exclude name="**/.*"/>
			<exclude name="WEB-INF/geronimo-web.xml"/>
		</war>
		
			
			<delete file="${jboss.home}/server/default/deploy/${name}.war"/>
			<copy file="${dist.dir}/${name}.war" todir="${jboss.home}/server/default/deploy"/>

			<delete file="D:/Sun/AppServer/domains/domain1/autodeploy/${name}.war"/>			
			<copy file="${dist.dir}/${name}.war" todir="E:/Sun/AppServer/domains/domain1/autodeploy/"/>
			
	</target>
	
	
	<target name="earfile-1" depends="build, warfile" description="Build the enterprise application archive" >
			<ear earfile="${dist.dir}/${name}.ear" basedir="${ear.dir}/package" appxml="${ear.dir}/META-INF/application.xml" manifest="${ear.dir}/META-INF/MANIFEST.MF">
				<include name="${name}.war" />

				<include name="${name}-domain.jar"/>
			</ear>
   </target>



	<target name="geronimo.warfile" depends="build"
			description="Build the web application archive packaged specifically for Geronimo">
	</target>


	<target name="setupHSQL" description="Set up HSQL database properties" if="useHSQL">
	</target>


	<target name="setupMYSQL" description="Set up MYSQL database properties" if="useMYSQL">
	</target>


	<target name="setupDB" depends="setupHSQL,setupMYSQL" description="Initialize the selected database">
	</target>


	<target name="tests" depends="build,setupDB" description="Run tests using initialized database">

		<delete dir="${testbuild.dir}"/>
		<mkdir dir="${testbuild.dir}"/>
		<delete dir="${testreports.dir}"/>
		<mkdir dir="${testreports.dir}"/>
		<delete dir="${testhtml.dir}"/>
		<mkdir dir="${testhtml.dir}"/>

		<javac srcdir="${testsrc.dir}" destdir="${testbuild.dir}" debug="true" deprecation="true">
			<classpath path="${build.dir}"/>
			<classpath refid="master-classpath"/>
			<classpath path="${jmxreserach.root}/lib/junit/junit.jar"/>
			<classpath refid="test-classpath"/>
		</javac>

		<copy todir="${build.dir}" preservelastmodified="true">
			<fileset dir="${src.dir}">
				<include name="META-INF/*"/>
			</fileset>
		</copy>

		<junit printsummary="true" fork="yes">
			<formatter type="xml"/>
			<test name="org.springframework.samples.jmxportability.OwnerTests" todir="${testreports.dir}"/>
			<test name="org.springframework.samples.jmxportability.jdbc.JdbcClinicTests" todir="${testreports.dir}"/>
			<test name="org.springframework.samples.jmxportability.hibernate.HibernateClinicTests" todir="${testreports.dir}"/>
			<test name="org.springframework.samples.jmxportability.toplink.TopLinkClinicTests" todir="${testreports.dir}"/>
			<test name="org.springframework.samples.jmxportability.jpa.EntityManagerClinicTests" todir="${testreports.dir}"/>			
			<test name="org.springframework.samples.jmxportability.jpa.JpaTemplateClinicTests" todir="${testreports.dir}"/>
			<classpath path="${build.dir}"/>
			<classpath path="${src.dir}"/>
			<classpath path="${testbuild.dir}"/>
			<classpath path="${testsrc.dir}"/>
			<classpath refid="master-classpath"/>
			<classpath refid="test-classpath"/>
		</junit>

		<junitreport todir="${testhtml.dir}">
			<fileset dir="${testreports.dir}">
				<include name="TEST-*.xml"/>
			</fileset>
			<report format="frames" todir="${testhtml.dir}"/>
		</junitreport>

		<!-- restore the database -->
		<ant antfile="${db.dir}/build.xml"/>

	</target>


	<target name="all" depends="clean,build,docs,warfile,tests" description="Clean,build,docs,warfile,tests"/>

</project>
